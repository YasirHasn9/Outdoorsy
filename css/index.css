/* colors
Light green :#7ed56f
medium green: #55c57a
Dark green: #28b485  */

* {
  margin: 0;
  padding: 0;
  /* padding and border are no longer added to total width and height 
  to the specified box module */
  box-sizing: border-box;
}

body {
  /* we are taking advantage of the inheritance
    usually the properties that related to the font are inherit 
    this is why are putting it in the body tag  */
  font-family: Lato, "sans-serif";
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  /* the linear-gradient goes on the top and the img goes on the bottom */
  background-image: linear-gradient(to top right, #7ed56f8f, #18c68c9c),
    url("../img/hero.jpg");
  /* it always try to fit the element inside the box */
  background-size: cover;
  /* when resize the img the top img still the same but the bottom of it gets
  slightly chopped */
  background-position: top;

  clip-path: polygon(
    /* top left */ 0% 0%,
    /* top right */ 100% 0%,
    /*bottom left*/ 100% 75vh,
    /*bottom right*/ 0 100%
  );
  position: relative;
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}
.logo {
  height: 35px;
}
.text-box {
  position: absolute;

  /* these properties are for the parent element */
  top: 40%;
  left: 50%;
  /* translate is for the element itself  */
  transform: translate(-50%, -50%);
  text-align: center;

  /* you can achieve to center everything into the text-box by using the flex box */
  /* display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; */
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* animation */
  animation-name: moveInLeft;
  animation-duration: 1s;
  /* animation-iteration-count: 2; determine hom times we want the animation what them to be */
  /* animation-delay: 2s; how long we want the client wait for the animation to be rendered */

  /* starts slower and ends faster  */
  /* animation-timing-function: ease-in; */

  /* starts faster and ends slower */
  animation-timing-function: ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  margin-bottom: 20px;
  /* animation-name: moveInRight;
  animation-duration: 3s; */
  animation: moveInRight 1s ease-out;
  /* determines the back part of the an element is visible or hidden */
  backface-visibility: hidden;
}

/* there are 2 ways for doing animation in css 
first:
   we can use the transition property and then specify on which
   property we want the animation 
   

   second: 
    we can use the @keyframes and inside it , we can use the percentage
    of px to play when to apply the animation
*/

@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* the translate goes form the right to left on the X's */
    transform: translateX(-100px);
  }
  80% {
    transform: translate(10px);
  }
  100% {
    opacity: 1;
    /* we give back to the original look */
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translate(-10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* link is pseudo selector? is it just a keyword that add to the selected element after the: 
it specifies the state of the selected element  */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;

  /* transition enables us to specify which property we want the element to have been animated 
  and sometimes the animation would be applied to every property so we choose all
  */
  transition: all 0.2s;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
.btn:active {
  transform: translateY(-1px);
}
.btn-white {
  background: #fff;
  color: #777;
}
